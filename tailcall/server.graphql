schema
  # Specify server configuration.
  # Start tailcall server at 0.0.0.0:8000
  # Enable GraphiQL playground
  @server(
    port: 8000
    graphiql: true
    queryValidation: true
  )

  # Specify a base url for all HTTP requests.
  @upstream(timeout: 5) {
  query: Query
  mutation: Mutation
}


type Query {
  org(id: ID!): GetOrgResponse!
    @http(
      baseURL: "http://localhost:9090"
      path: "/orgs/{{args.id}}"
    )

  profile(id: ID!): GetProfileResponse!
    @http(
      baseURL: "http://localhost:9091"
      path: "/profiles/{{args.id}}"
    )

  license(id: ID!): GetLicenseResponse!
    @http(
      baseURL: "http://localhost:9092"
      path: "/licenses/{{args.id}}"
    )
}

type Mutation {

  createOrg(input: CreateOrgInput!): CreateOrgResponse!
    @http(
      baseURL: "http://localhost:9090"
      method: "POST"
      path: "/orgs/{{args.input.id}}"
      body: "{{args.input}}"
    )

  createProfile(input: CreateProfileInput!): CreateProfileResponse!
    @http(
      baseURL: "http://localhost:9091"
      method: "POST"
      path: "/profiles/{{args.input.id}}"
      body: "{{args.input}}"
    )

  createLicense(input: CreateLicenseInput!): CreateLicenseResponse!
    @http(
      baseURL: "http://localhost:9092"
      method: "POST"
      path: "/licenses/{{args.input.id}}"
      body: "{{args.input}}"
    )

}
