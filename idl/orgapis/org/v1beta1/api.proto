syntax = "proto3";

package org.v1beta1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";

// Service for managing Orgs.
service OrgService {
  // CreateOrg - Creates a new Organization.
  rpc CreateOrg(CreateOrgRequest) returns (CreateOrgResponse) {
    option (google.api.http).post = "/orgs/{id}";
    option (google.api.http).body = "*";
    option idempotency_level = IDEMPOTENT;
  }
  // GetOrg - Gets an Organization.
  rpc GetOrg(GetOrgRequest) returns (GetOrgResponse) {
    option (google.api.http).get = "/orgs/{id}";
    option idempotency_level = NO_SIDE_EFFECTS;
  }
  // ListOrgs - Lists Organizations.
  rpc ListOrgs(ListOrgsRequest) returns (ListOrgsResponse) {
    option (google.api.http).get = "/orgs";
    option idempotency_level = NO_SIDE_EFFECTS;
  }
}

message CreateOrgRequest {
  string id = 1;
  string name = 2 [(buf.validate.field).string.min_len = 1];
}

message CreateOrgResponse {}

message Org {
  string id = 1;
  string name = 2;
}

message GetOrgRequest {
  string id = 1;
}

message GetOrgResponse {
  Org org = 1;
}

message ListOrgsRequest {
  string parent = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message ListOrgsResponse {
  repeated Org orgs = 1;
  string next_page_token = 2;
}
